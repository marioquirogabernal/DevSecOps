
name: GOAT Compile

on:
  push:
    branches:
      - main

jobs:
  integration:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: "Obtener codigo"
        uses: actions/checkout@v3

      - name: "Instalar Java"
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: "Compilacion"
        run: ./mvnw clean install

      - name: "Verificar paquete"
        run: ls -ltra target

      - name: "Dependency Check"
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        id: Depcheck
        with:
          project: 'WebGoat'
          path: '.'
          format: 'HTML'
          out: 'reports'

      - name: "Verificar reporte"
        run: ls -ltra reports

      - name: "Generacion de imagen"
        run: |
          docker build -t mario-repositorio .


      - name: "Configurar credenciales de AWS"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: "Cargar imagen a ECR"
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/n3j7o1e0
          docker tag mario-repositorio:latest public.ecr.aws/n3j7o1e0/mario-repositorio:latest
          docker push public.ecr.aws/n3j7o1e0/mario-repositorio:latest

      - name: "Descargar terraform"
        run: |
          wget https://releases.hashicorp.com/terraform/1.6.3/terraform_1.6.3_linux_amd64.zip
          unzip terraform_1.6.3_linux_amd64.zip
          sudo mv terraform /usr/local/bin/
          
      - name: "Correr terraform"
        run: | 
          terraform init
          terraform plan -out tfplan
          terraform apply tfplan
        
      - name: "Instalar Ansible"
        run: |
          sudo apt update
          sudo apt install ansible

      - name: "Cambiar IP"
        run: | 
          ./update_inventory.sh

      - name: "Correr Ansible"
        env:
          PRIVATE_KEY: ${{ secrets.MARIO_CLAVES }}
        run: |
          echo "$PRIVATE_KEY" >> $HOME/key.pem
          sudo chmod 600 $HOME/key.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          sudo ansible-playbook -i inventario nginx.yml --become
        continue-on-error: true

      - name: Run Arachni
        run: |
          wget https://github.com/Arachni/arachni/releases/download/v1.6.1.3/arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          tar -xvf arachni-1.6.1.3-0.6.1.1-linux-x86_64.tar.gz
          var_IP=$(docker inspect container-prueba | grep "IPAddress" | tail -1 | cut -d '"' -f 4)
          ./arachni-1.6.1.3-0.6.1.1/bin/arachni --check=* http://$var_IP:8080/WebGoat/login
      
      - name: "tirar infraestructura"
        run: |
          terraform plan -destroy -out tfplay
          terraform apply tfplan